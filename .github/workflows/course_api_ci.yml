# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

env:
  #  AZURE_CONTAINER_REGISTRY: "your-azure-container-registry"
  #  CONTAINER_NAME: "your-container-name"
  RESOURCE_GROUP: "1-10013ade-playground-sandbox"
  CLUSTER_NAME: "leonsaks101"
  DEPLOYMENT_MANIFEST_PATH: "deployment.yaml"



permissions:
  contents: read

jobs:
  build-java:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 16
      uses: actions/setup-java@v1
      with:
        java-version: 17

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Show me the Jar
      run: |
        hostname
        pwd
        ls -ltr
        ls -ltr $PWD/build/libs

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag leepereira/course-api:0.0.2
        docker images
        container_id=$(docker run -d -p 8080:8080 leepereira/course-api:0.0.2)
        docker ps
        docker logs $container_id
        
    - name : Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name : Docker Push
      run: | 
        docker push leepereira/course-api:0.0.2




  deploy:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:

      - name: Azure Login
        run: az login --service-principal --username ${{ secrets.AZURE_SP_CLIENT_ID }} --password ${{ secrets.AZURE_SP_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_SP_TENANT_ID }}



      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ env.DEPLOYMENT_MANIFEST_PATH }}
          images: |
            leepereira/course-api:0.0.2
        

      #
#    - name: Build & Push to Docker Hub
#      uses: opspresso/action-docker@master
#      with:
#        args: --docker
#      env:
#        USERNAME: ${{ secrets.DOCKER_USERNAME }}
#        PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#        TAG_NAME: "v0.0.1"
#        BUILDX: "true"



#    - name: Build and Push Docker Image
#      uses: mr-smithers-excellent/docker-build-push@v4
#      with:
#        image: leepereira/course-api:latest
#        registry: docker.io
#        username: ${{ secrets.DOCKER_USERNAME }}
#        password: ${{ secrets.DOCKER_PASSWORD }}




#    steps:
#      - uses: actions/checkout@v3
#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)